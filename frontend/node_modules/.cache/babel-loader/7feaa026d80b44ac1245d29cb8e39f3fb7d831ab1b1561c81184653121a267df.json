{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000\";\nexport const signup = async (email, password, role) => {\n  const response = await fetch(`${API_URL}/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      role\n    })\n  });\n  return response.json();\n};\nexport const login = async (email, password) => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return response.json();\n};\nexport const addTimesheet = async (project, hours, description, date) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(`${API_URL}/timesheet/add`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      project,\n      hours,\n      description,\n      date\n    })\n  });\n  return response.json();\n};\nexport const getTimesheets = async () => {\n  const token = localStorage.getItem(\"token\");\n  const response = await fetch(`${API_URL}/timesheet/my`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n};\nexport const getDashboard = async token => {\n  const response = await fetch(`${API_URL}/protected/dashboard`, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","signup","email","password","role","response","fetch","method","headers","body","JSON","stringify","json","login","addTimesheet","project","hours","description","date","token","localStorage","getItem","Authorization","getTimesheets","getDashboard"],"sources":["C:/Users/ASUS/Desktop/project/timesheet-app/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000\";\r\n\r\nexport const signup = async (email, password, role) => {\r\n    const response = await fetch(`${API_URL}/auth/signup`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password, role }),\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const addTimesheet = async (project, hours, description, date) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await fetch(`${API_URL}/timesheet/add`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ project, hours, description, date }),\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const getTimesheets = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await fetch(`${API_URL}/timesheet/my`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.json();\r\n};\r\n\r\n\r\nexport const getDashboard = async (token) => {\r\n    const response = await fetch(`${API_URL}/protected/dashboard`, {\r\n        method: \"GET\",\r\n        headers: { \"Authorization\": `Bearer ${token}` },\r\n    });\r\n    return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,cAAc,EAAE;IACnDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC;EAClD,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOX,KAAK,EAAEC,QAAQ,KAAK;EAC5C,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,aAAa,EAAE;IAClDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,KAAK,EAAEC,WAAW,EAAEC,IAAI,KAAK;EACrE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,gBAAgB,EAAE;IACrDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCc,aAAa,EAAE,UAAUH,KAAK;IAClC,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,OAAO;MAAEC,KAAK;MAAEC,WAAW;MAAEC;IAAK,CAAC;EAC9D,CAAC,CAAC;EACF,OAAOb,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,eAAe,EAAE;IACpDW,OAAO,EAAE;MAAEc,aAAa,EAAE,UAAUH,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOd,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC;AAGD,OAAO,MAAMY,YAAY,GAAG,MAAOL,KAAK,IAAK;EACzC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,sBAAsB,EAAE;IAC3DU,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUW,KAAK;IAAG;EAClD,CAAC,CAAC;EACF,OAAOd,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}